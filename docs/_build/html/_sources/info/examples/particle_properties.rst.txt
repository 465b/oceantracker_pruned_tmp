
#########################
Particle properties
#########################

Particle properties can easily  add to computation via parameters, eg decaying concentrations,  by listing in particle_properties parameters.
Standard properties include, status, tide, water_depth and  particle age.

Decaying particle
====================
.. raw:: html

  <center>
    <video width="95%" controls muted autoplay loop src="../../_static/examples/demo60_SCHISM_3D_decaying_particle.mp4">
   </video>
  </center>

Decaying particle property used to size and colour  particles. ``decay_time_scale`` parameter = 3.5 hours.


* class: ``particle_properties.age_decay.AgeDecay``

demos.demo_code.demo60_SCHISM_3D_decaying_particle.py

.. raw:: html

   <details>
   <summary> <a> code </a> </summary>

.. literalinclude:: ../../../demos/demo_code/demo60_SCHISM_3D_decaying_particle.py
    :language: python

.. raw:: html

   </details>

.. raw:: html

   <details>
   <summary><a> yaml parameters </a></summary>

.. literalinclude:: ../../../demos/demo_yaml/demo60_SCHISM_3D_decaying_particle.yaml

.. raw:: html

   </details>

Polygon aware particles
=============================
.. raw:: html

  <center>
    <video width="95%" controls autoplay loop src="../../_static/examples/demo07_inside_polygon_events.mp4">
   </video>
  </center>

Particles with additional inside polygon  property, with optional logging of polygon entry and exit events

* class: ``particle_properties.inside_polygons.InsidePolygonsNonOverlapping2D``
* class: ``event_loggers.log_polygon_entry_and_exit.LogPolygonEntryAndExit``

Particle Status
=====================
.. raw:: html

  <center>
    <video width="95%" controls autoplay loop src="../../_static/examples/demo02_animation.mp4">
   </video>
  </center>

Particles coloured by their status property. Status can be one of following strings

``['unknown', 'bad_cord', 'cell_search_failed', 'notReleased', 'dead', 'outside_open_boundary', 'frozen', 'stranded_by_tide', 'on_bottom', 'moving']``



